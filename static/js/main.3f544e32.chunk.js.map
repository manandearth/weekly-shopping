{"version":3,"sources":["logo.svg","components/RecipeTopLevel.js","constants/shared.js","components/RecipeIngredientsTable.js","components/NewRecipeIngredientsTable.js","components/SubmitRecipe.js","redux/actions.js","redux/actionTypes.js","utilities/parsers.js","components/NewRecipe.js","constants/placeholders.js","redux/selectors.js","components/RecipeList.js","components/EditRecipe.js","components/Select.js","components/Controller.js","components/Tooltip.js","components/Product.js","components/AddProduct.js","components/IngredientsDB.js","components/Cell.js","components/WeeklyView.js","App.js","redux/reducers/recipes.js","redux/reducers/selections.js","redux/reducers/edited.js","redux/reducers/pantry.js","redux/reducers/week.js","redux/reducers/index.js","redux/store.js","index.js"],"names":["module","exports","__webpack_require__","p","RecipeTopLevel","_this","this","react_default","a","createElement","className","props","topBar","editableTitle","onChange","e","onUpdateTitle","target","value","onKeyDown","onTitleEnterKey","onBlur","onTitleBlur","title","onFocus","select","autoFocus","required","onClick","onTitleClick","editableServings","onUpdateServings","onServingsEnterKey","onServingsBlur","servings","type","min","step","onServingsClick","React","Component","unitSet","RecipeIngredientsTable","ingredients","onAddIngredient","Object","keys","map","k","key","editable","id","name","onTableChange","onTableEnterKey","onTableBlur","onTableClick","qty","u","unit","NewRecipeIngredientsTable","RecipeIngredientsTable_RecipeIngredientsTable","SubmitRecipe","handleSubmit","_entries","_","entries","_values","values","alert","filter","v","length","constructor","addRecipe","onSubmitReset","connect","recipe","content","payload","inputParsers","date","input","_input$split","split","_input$split2","slicedToArray","month","day","year","concat","uppercase","toUpperCase","integer","parseInt","float","parseFloat","NewRecipe","classCallCheck","possibleConstructorReturn","getPrototypeOf","call","handleTitleClick","setState","state","handleTitleEnterKey","keyCode","which","handleTitleBlur","updateTitle","handleServingsClick","handleServingsEnterKey","handleServingsBlur","updateServings","handleAddIngredient","nextid","objectSpread","defineProperty","handleTableClick","event","idx","handleTableEnterKey","handleTableBlur","handleTableChange","handleSubmitReset","defaultState","list","RecipeTopLevel_RecipeTopLevel","NewRecipeIngredientsTable_NewRecipeIngredientsTable","components_SubmitRecipe","editRecipeTitlePH","getRecipesState","store","recipes","getSelectedFromRecipes","selectedRecipeTitle","selections","selectedRecipe","getSelectedRecipe","getSelectedToEdit","getProducts","pantry","getWeek","week","RecipeList","handleClick","setTimeout","selectRecipe","editRecipe","selected","_this2","EditRecipe","handleGetIngredients","handleGetServings","handleGetTitle","innerHTML","toggleTitle","handleUpdateTitle","edited","toggleServings","handleUpdateServings","toggleTable","updateTable","addIngredient","handleResetEdit","resetEdit","EditRecipe_EditRecipeIngredientsTable","EditRecipeIngredientsTable","editedRecipe","Select","selectedElement","createRef","_this$props","children","open","cloneElement","ref","displayName","Tooltip","styles","wrapper","position","display","zIndex","color","cursor","tooltip","minWidth","maxWidth","background","bottom","left","marginBottom","padding","WebkitTransform","msTransform","OTransform","transform","fontSize","arrow","width","height","marginLeft","borderLeft","borderRight","borderTop","gap","mergeStyles","userStyles","forEach","assign","show","setVisibility","hide","visible","handleTouch","assignOutsideTouchHandler","document","addEventListener","handler","currentNode","componentNode","ReactDOM","findDOMNode","refs","instance","parentNode","removeEventListener","onMouseEnter","onMouseLeave","onTouchStart","style","Product","handleToggleEdit","handleUpdateInput","handleOnEnter","product","productTitle","updateProductTitle","editableProductTitle","addFormat","handleRemoveProduct","window","confirm","removeProduct","fmts","fmt","products","newTitle","AddProduct","handleEdit","handleUpdate","handleToggle","addProduct","formats","IngredientsDB","handleHover","initialState","zipObject","whiteRoundedStyle","flexAlign","backgroundColor","lineHeight","borderRadius","opacity","src_components_AddProduct","Tooltip_Tooltip","src_components_Product","Cell","handleRemoveMeal","removeCell","cellID","field","toggleField","updateCell","handleEnterKey","titleCase","handleBlur","string","charAt","slice","editableDish","dish","addCell","EmptyCell","WeeklyView","mealsByDay","weekday","entry","startsWith","weekdays","longestColumn","max","cell","src_components_Cell","range","row","WeeklyView_EmptyCell","ColorBtn","App","src","logo","alt","NewRecipe_NewRecipe","src_components_RecipeList","components_EditRecipe","components_WeeklyView","src_components_IngredientsDB","rice pudding","1","2","3","4","mash potatoes","salt","rice","unsalted butter","salted butter","whole milk","semiskimmed milk","caster sugar","potatoes","combineReducers","arguments","undefined","action","_action$payload","objectDestructuringEmpty","_action$payload2","existingIngredients","newState","_action$payload3","toConsumableArray","_action$playload","playload","biggerThanRemoved","includes","splitKey","renameKey","persistConfig","storage","stateReconciler","autoMergeLevel2","blacklist","pReducer","persistReducer","rootReducer","createStore","__REDUX_DEVTOOLS_EXTENSION__","persistor","persistStore","render","es","integration_react","loading","src_App","getElementById"],"mappings":"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","file":"static/js/main.3f544e32.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/logo.5d5d9eef.svg\";","import React from 'react'  ;\nimport PropTypes from 'prop-types';\n\nexport default class RecipeTopLevel extends React.Component {\n  render() {\n    return(\n      <div className='new-recipe'>\n        <form>\n      <h2 className='top-bar'>{this.props.topBar}</h2>\n        {this.props.editableTitle ?\n          <input\n            className=\"rename-list\"\n            onChange={e => this.props.onUpdateTitle(e.target.value)}\n            onKeyDown={this.props.onTitleEnterKey}\n            onBlur={this.props.onTitleBlur}\n            value={this.props.title}\n            onFocus={e => e.target.select()}\n            autoFocus\n            required>\n          </input>\n          :\n          <div>\n            <h2>\n              <span onClick={this.props.onTitleClick}\n                    className=\"recipe-title\"\n              >{this.props.title === '' ?\n                '<Recipe-Name>':\n                this.props.title}\n              </span>\n            </h2>\n          </div>}\n\n        <div \n          className='servings'>\n          {this.props.editableServings ?\n            <input onChange={e => this.props.onUpdateServings(e.target.value)}\n                   onKeyDown={this.props.onServingsEnterKey}\n                   onBlur={this.props.onServingsBlur}\n                   value={this.props.servings}\n                   type='number'\n                   min='1'\n                   step='1'\n                   onFocus={e => e.target.select()}\n                   autoFocus></input>\n            :\n            <h2 className='servings' onClick={this.props.onServingsClick}> Serves: .... {this.props.servings}</h2>}\n      </div>\n      </form>\n      </div>);\n  }\n}\n\nRecipeTopLevel.propTypes = {\n  servings: PropTypes.number.isRequired,\n  title: PropTypes.string.isRequired\n};\n","export const unitSet = ['kg', 'gr', 'ml', 'litre', 'tsp', 'tbsp', 'cup', 'lbs', 'oz', 'units' ];\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport { unitSet } from '../constants/shared';\nexport default class RecipeIngredientsTable extends React.Component {\n\t\n  render(props) {\n    const ingredients = this.props.ingredients;\n\n    return(\n      <div>\n        <div> <input className='button'\n                     type='submit'\n                     value='Add ingredient'\n                     onClick={this.props.onAddIngredient}\n              />\n        </div>\n        <table className='new-ingredients-table'>\n          <tbody>\n            <tr>\n              <th>ingredient</th>\n              <th>Qty.</th>\n              <th>Unit</th>\n            </tr>\n            {Object.keys(ingredients).map((k) => (\n              <tr key={'ingredient-row-' + k}>\n                {ingredients[k].editable === 'name' ?\n                  <td><input\n                    className='name'\n                    id={k}\n                    value={ingredients[k].name}\n                    onChange={e => this.props.onTableChange(e)}\n                    onKeyDown={this.props.onTableEnterKey}\n                    onBlur={this.props.onTableBlur}\n                    onFocus={e => e.target.select()}\n                    autoFocus\n                  ></input></td> :\n                  <td\n                    id={k}\n                    className='name'\n                    onClick={this.props.onTableClick}\n                  >{ingredients[k].name}</td> }\n                \n                <td>\n                  {ingredients[k].editable === 'qty' ?\n                    <input\n                      className='qty'\n                      id={k}\n                      type='number'\n                      min='0'\n                      value={ingredients[k].qty}\n                      onChange={e => this.props.onTableChange(e)}\n                      onKeyDown={this.props.onTableEnterKey}\n                      onBlur={this.props.onTableBlur}\n                      onFocus={e => e.target.select()}\n                      autoFocus\n                      required></input> :\n                    <span\n                      id={k}\n                      className='qty'\n                      onClick={this.props.onTableClick}\n                    >{ingredients[k].qty}</span> }\n                </td>\n                <td\n                  \n                >{ingredients[k].editable === 'unit' ?\n                  <select\n                    type='list'\n                    name='unit'\n                    className='unit'\n                    id={k}\n                    onChange={this.props.onTableChange}\n                    onBlur={this.props.onTableBlur}>\n                    {unitSet.map((u) => (<option key={'unit-list-item-' + u} >{u}</option>))}\n                  </select>\n                  :\n                  <span\n                    id={k}\n                    className='unit'\n                    onClick={this.props.onTableClick}\n                  >{ingredients[k].unit}</span> }</td>\n              </tr>\n            ))}\n          </tbody>\n        </table>\n      </div>);\n  }\n}\n\nRecipeIngredientsTable.propTypes = {\n  qty: PropTypes.number,\n  unit: PropTypes.string,\n  name: PropTypes.string\n  \n};\n","import React from 'react';\nimport RecipeIngredientsTable from './RecipeIngredientsTable';\n\nexport default class NewRecipeIngredientsTable extends React.Component {\n\n\n\trender(props) {\n    return(\n      <div>\n        <RecipeIngredientsTable\n        onAddIngredient={this.props.onAddIngredient}\n          ingredients={this.props.ingredients}\n          onTableChange={this.props.onTableChange}\n          onTableClick={this.props.onTableClick}\n          onTableEnterKey={this.props.onTableEnterKey}\n          onTableBlur={this.props.onTableBlur}/>\n      </div>\n\t  );\n  }\n}\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { addRecipe } from '../redux/actions.js';\nimport _ from 'lodash';\n\nclass SubmitRecipe extends React.Component {\n  \n  handleSubmit = (props) => {\n    const title = this.props.title;\n    const servings = this.props.servings;\n    const ingredients = this.props.ingredients;\n    const _entries = _.entries(ingredients);\n    const _values = _.values(ingredients); \n    //check that title has a value\n    if (title === '')\n    { alert('Please supply a recipe name'); }\n    //check that ingredient object is not empty and `name` property was given a value.\n    else if ( _values.filter((v) => (v.name === 'new ingredient')).length > 0) {\n      alert ( 'Please supply an ingredient name' );\n    } else if ( _entries.length === 0 && ingredients.constructor === Object){\n      alert ( 'Please supply ingredients');\n    } else {\n      this.props.addRecipe(\n        title, {\n          title: title,\n          editableTitle: false,\n          servings: servings,\n          editableServings: false,\n          ingredients: ingredients});\n      this.props.onSubmitReset();\n    };\n  }\n\n  render() {\n    return(\n      <div>\n        <button\n          className='button'\n      /* onClick={this.handleSubmit} */\n          onClick={this.handleSubmit}\n        >submit</button>\n      </div>);\n  }\n}\n\n\n\n\nexport default connect(null, { addRecipe })(SubmitRecipe);\n","import { ADD_RECIPE, SELECT_RECIPE, TOGGLE_TITLE, TOGGLE_SERVINGS, UPDATE_TITLE, UPDATE_SERVINGS, EDIT_RECIPE, TOGGLE_TABLE, UPDATE_TABLE, RESET_EDIT, ADD_INGREDIENT, ADD_PRODUCT, REMOVE_PRODUCT, UPDATE_PRODUCT_TITLE, ADD_FORMAT, REMOVE_FORMAT, ADD_CELL, REMOVE_CELL, TOGGLE_FIELD, UPDATE_CELL } from './actionTypes';\n\n// let nextRecipeId = 1;\n\nexport const addRecipe = ( recipe, content ) => ({\n\t\ttype: ADD_RECIPE,\n\t\tpayload: {\n\t\t\t\trecipe,\n\t\t\t\tcontent\n\t\t}\n});\n\nexport const selectRecipe = ( recipe ) => ({\n\ttype: SELECT_RECIPE,\n\tpayload: {\n\t\trecipe}\n});\n\n\nexport const toggleTitle = ( title ) => ({\n\ttype: TOGGLE_TITLE,\n\tpayload: {\n\t\ttitle}\n});\n\nexport const toggleServings = ( title, servings ) => ({\n\ttype: TOGGLE_SERVINGS,\n\tpayload: {\n\t\ttitle,\n\t\tservings}\n});\n\nexport const updateTitle = ( title ) => ({\n\ttype: UPDATE_TITLE,\n\tpayload: {\n\t\ttitle}\n});\n\nexport const updateServings = ( servings ) => ({\n\ttype: UPDATE_SERVINGS,\n\tpayload: {\n\t\tservings}\n});\n\nexport const editRecipe = ( recipe ) => ({\n\ttype: EDIT_RECIPE,\n\tpayload: {\n\t\trecipe\n\t}\n});\n\nexport const toggleTable = ( id, className ) => ({\n\ttype: TOGGLE_TABLE,\n\tpayload: {\n\t\tid,\n\t\tclassName}\n\t});\n\nexport const updateTable = ( id, className, value ) => ({\n\ttype: UPDATE_TABLE,\n\tpayload: {\n\t\tid,\n\t\tclassName,\n\t\tvalue}\n});\n\nexport const resetEdit = () => ({\n\ttype: RESET_EDIT\n});\n\nexport const addIngredient = () => ({\n\ttype: ADD_INGREDIENT\n});\n\n\nexport const addProduct = ( product, formats ) => ({\n\ttype: ADD_PRODUCT,\n\tpayload: {\n\t\tproduct,\n\t\tformats\n\t}\n});\n\nexport const removeProduct = ( product ) => ({\n\ttype: REMOVE_PRODUCT,\n\tpayload: {\n\t\tproduct\n\t}\n});\n\nexport const updateProductTitle = ( product, newTitle ) => ({\n\ttype: UPDATE_PRODUCT_TITLE,\n\tpayload: {\n\t\tproduct,\n\t\tnewTitle\n\t}\n});\n\nexport const addFormat = ( product, qty, unit ) => ({\n\ttype: ADD_FORMAT,\n\tpayload: {\n\t\tproduct,\n\t\tqty,\n\t\tunit\n\t}\n});\n\nexport const removeFormat = ( product, id ) => ({\n\ttype: REMOVE_FORMAT,\n\tpayload: {\n\t\tproduct,\n\t\tid\n\t}\n});\n\nexport const addCell = ( cellID ) => ({\n\ttype: ADD_CELL,\n\tpayload: {\n\t\tcellID}\n});\n\nexport const removeCell = ( cellID ) => ({\n\ttype: REMOVE_CELL,\n\tpayload: {\n\t\tcellID }\n});\n\nexport const toggleField = ( cellID, field ) => ({\n\ttype: TOGGLE_FIELD,\n\tpayload: {\n\t\tcellID,\n\t\tfield}\n});\n\nexport const updateCell = ( cellID, field, value ) => ({\n\ttype: UPDATE_CELL,\n\tpayload: {\n\t\tcellID,\n\t\tfield,\n\t\tvalue}\n});\n\t\n","export const ADD_RECIPE = \"ADD_RECIPE\";\nexport const SELECT_RECIPE = \"SELECT_RECIPE\";\nexport const TOGGLE_TITLE = \"TOGGLE_TITLE\";\nexport const TOGGLE_SERVINGS = \"TOGGLE_SERVINGS\";\nexport const UPDATE_TITLE = \"UPDATE_TITLE\";\nexport const UPDATE_SERVINGS = \"UPDATE_SERVINGS\";\nexport const EDIT_RECIPE = \"EDIT_RECIPE\";\nexport const TOGGLE_TABLE = \"TOGGLE_TABLE\";\nexport const UPDATE_TABLE = \"UPDATE_TABLE\";\nexport const RESET_EDIT = \"RESET_EDIT\";\nexport const ADD_INGREDIENT = \"ADD_INGREDIENT\";\nexport const ADD_PRODUCT = \"ADD_PRODUCT\";\nexport const REMOVE_PRODUCT = \"REMOVE_PRODUCT\";\nexport const ADD_FORMAT = \"ADD_FORMAT\";\nexport const REMOVE_FORMAT = \"REMOVE_FORMAT\";\nexport const ADD_CELL = \"ADD_CELL\";\nexport const REMOVE_CELL = \"REMOVE_CELL\";\nexport const TOGGLE_FIELD = \"TOGGLE_FIELD\";\nexport const UPDATE_CELL = \"UPDATE_CELL\";\nexport const UPDATE_PRODUCT_TITLE = \"UPDATE_PRODUCT_TITLE\";\n","export const inputParsers = {\n  date(input) {\n    const [month, day, year] = input.split('/');\n    return `${year}-${month}-${day}`;\n  },\n  uppercase(input) {\n    return input.toUpperCase();\n  },\n\tinteger(input) {\n\t\treturn parseInt(input);\n  },\n\tfloat(input) {\n\t\treturn parseFloat(input);\n\t}\n};\n\n\n\n","import React from 'react';\nimport RecipeTopLevel from './RecipeTopLevel';\nimport NewRecipeIngredientsTable from './NewRecipeIngredientsTable';\nimport SubmitRecipe from './SubmitRecipe';\nimport { inputParsers }  from '../utilities/parsers';\n// import { addRecipe } from '../redux/reducers/index.js';\n\nexport default class NewRecipe extends React.Component {\n\n  constructor (props) {\n    super(props);\n    this.nextid = 0;  //for the counter to work the let must be defined outside of the handler  \n    this.defaultState = {\n      editableTitle: false,\n      title: '',\n      editableServings: false,\n      servings: 1,\n      ingredients: {},\n      list: []\n    };\n    this.state = this.defaultState;\n    \n  }\n  \n  handleTitleClick = () => \n    this.setState({editableTitle: !this.state.editableTitle});\n\n  handleTitleEnterKey = (e) => {\n    const keyCode = e.keyCode || e.which;\n    if (keyCode === 13) {\n      this.setState({editableTitle: !this.state.editableTitle});\n    }}\n\n  handleTitleBlur = () => \n    this.state.editableTitle ?\n    this.setState({editableTitle: !this.state.editableTitle}) : null;\n\n  updateTitle = title => {\n    this.setState({ title });\n  }\n\t\n  handleServingsClick = () => {\n    this.setState({editableServings: !this.state.editableServings});\n  }\n\n  handleServingsEnterKey = (e) => {\n    const keyCode = e.keyCode || e.which;\n    if (keyCode === 13) {\n      this.setState({editableServings: !this.state.editableServings});\n    }}\n\n  handleServingsBlur = () => \n    this.state.editableServings ?\n    this.setState({editableServings: !this.state.editableServings}) : null;\n\n  updateServings = servings => {\n    this.setState({ servings: inputParsers.integer(servings) });\n  }\n\n  handleAddIngredient = () => {\n    let id = ++this.nextid;\n    this.setState({ingredients: {...this.state.ingredients, [id]: { name: 'new ingredient', qty: 1, unit: 'kg', editable: null}}});\n  }\n\n  handleTableClick  = (event) => {\n    const ingredients = this.state.ingredients;\n    const target = event.target;\n    const className = target.className;\n    let idx = parseInt(target.id);\n    this.setState({ingredients:\n      {...ingredients, [idx]: {...ingredients[idx] , editable: className}}});\n\t}\n\n  handleTableEnterKey = (event) => {\n    const  ingredients = this.state.ingredients;\n    const target = event.target;\n    let idx = parseInt(target.id);\n    const keyCode = event.keyCode || event.which;\n    if (keyCode === 13) {\n      this.setState({ingredients:\n        {...ingredients, [idx]: {...ingredients[idx] , editable: null}}});\n    }\n  }\n\n  handleTableBlur = (event) => {\n    const  ingredients = this.state.ingredients;\n    const target = event.target;\n    let idx = parseInt(target.id);\n    this.setState({ingredients:\n      {...ingredients, [idx]: {...ingredients[idx] , editable: null}}});\n  }\n\t\n  handleTableChange = (event) => {\n\n    const target = event.target;\n    const value = target.value;\n    const idx = parseInt(target.id);\n    const ingredients = this.state.ingredients;\n    const className = target.className;    \n\t\t  switch (className) {\n        case 'qty':\n          this.setState({ingredients:\n            {...ingredients, [idx]: {...ingredients[idx] ,\n              [className]: inputParsers.float(value) }}});\n\t\t\t\t  break;\n\t\t\t  default:\n\t\t\t\t  this.setState({ingredients:\n            {...ingredients, [idx]: {...ingredients[idx] ,\n              [className]: value }}});\n\t\t  }\n    }\n  ;\n  \n  \n\n  handleSubmitReset = () =>\n    this.setState({...this.defaultState});\n  \n  \n  render() {\n    return (\n      <div className='new-recipe'>\n        <RecipeTopLevel\n          topBar={'Add new recipe'}\n          editableTitle={this.state.editableTitle}\n          editableServings={this.state.editableServings}\n          title={this.state.title}\n          onTitleClick={this.handleTitleClick}\n          onTitleEnterKey={this.handleTitleEnterKey}\n          onTitleBlur={this.handleTitleBlur}\n          onUpdateTitle={this.updateTitle}\n          servings={this.state.servings}\n          onServingsClick={this.handleServingsClick}\n          onServingsEnterKey={this.handleServingsEnterKey}\n          onServingsBlur={this.handleServingsBlur}\n          onUpdateServings={this.updateServings}/>\n\n\n        <NewRecipeIngredientsTable\n          onAddIngredient={this.handleAddIngredient}\n          ingredients={this.state.ingredients}\n          onTableChange={this.handleTableChange}\n          onTableClick={this.handleTableClick}\n          onTableEnterKey={this.handleTableEnterKey}\n          onTableBlur={this.handleTableBlur}\n        />\n        <div>\n          <SubmitRecipe\n            title={this.state.title}\n            servings={this.state.servings}\n            ingredients={this.state.ingredients}\n            onSubmitReset={this.handleSubmitReset}/>\n        </div>\n      </div>\n    );\n  }\n  \n}\n","//namespace for place holders that are being reused in the app. \n//like editRecipeTitlePH that is refered to also as an argument in later conditionals\n\nexport const editRecipeTitlePH = 'pick a recipe to edit';\n\n","import _ from 'lodash';\nimport { editRecipeTitlePH } from '../constants/placeholders';\n\nexport const getRecipesState = store => store.recipes;\n\nexport const getEdited = store =>\n\tstore.editedRecipe.recipe ?\n\tstore.editedRecipe.recipe :\n\t{};\n\nexport const getSelectedRecipe = store => \n\tstore.selections.selectedRecipe.recipe ?\n\tstore.selections.selectedRecipe.recipe :\n\teditRecipeTitlePH;\n\nexport const getSelectedFromRecipes = store => {\n\tconst recipes = getRecipesState(store);\n\tconst selectedRecipeTitle = getSelectedRecipe(store);\n\treturn _.values(recipes).filter(recipe => (recipe.title === selectedRecipeTitle));\n};\n\nexport const getSelectedServings = store => {\n\treturn( \n\t\tstore.selections.selectedRecipe.recipe && store.recipes ?\n\t\t\t_.values(getSelectedFromRecipes(store))[0].servings :\n\t\t\t'' );};\n\nexport const getSelectedIngredients = store => {\n\treturn (\n\t\tstore.selections.selectedRecipe.recipe && store.recipes ?\n\t\t\t_.values(getSelectedFromRecipes(store))[0].ingredients :\n\t\t\t{}\n\t);\n};\n\nexport const getSelectedEditableServings = store => {\n\treturn( \n\t\tstore.selections.selectedRecipe.recipe && store.recipes ?\n\t\t\t_.values(getSelectedFromRecipes(store))[0].editableServings :\n\t\t\t'' );};\n\nexport const getSelectedEditableTitle = store => {\n\treturn( \n\t\tstore.selections.selectedRecipe.recipe && store.recipes ?\n\t\t\t_.values(getSelectedFromRecipes(store))[0].editableTitle :\n\t\t\t'' );};\n\nexport const getSelectedToEdit = store => {\n\treturn (\n\t\tstore.selections.selectedRecipe.recipe && store.recipes ?\n\t\t\t_.values(getSelectedFromRecipes(store))[0] : {}\n\t);};\n\nexport const getProducts = store => {\n\treturn (\n\t\tstore.pantry);\n};\n\nexport const getWeek = store => \n\t\tstore.week;\n\n","import React from 'react';\nimport './RecipeList.css';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\nimport { editRecipe, selectRecipe } from '../redux/actions';\nimport { getSelectedToEdit } from '../redux/selectors';\nclass  RecipeList extends React.Component {\n\n  handleClick = (recipe) => {\n    setTimeout(() => {\n    this.props.selectRecipe(recipe);\n      this.props.editRecipe(this.props.selected);}, 100);\n  }\n  \n  render (){\n    const recipes = this.props.recipes;\n\n\t\treturn(\n\t\t\t<div className='recipe-list'>\n        <h2 className='title'>The recipes</h2>\n        <div className='recipe-list-block'>\n          {_.keys(recipes).map((id) =>\n            <button className='recipe-list-item'\n                    key={'recipe-' + id}\n                    onClick={() => this.handleClick(id)}\n            >{id}</button>)}  \n        </div>\n      </div>\n    );\n\t}\n}\n\n\n//REACT_REDUX BIT:\n\nfunction mapStateToProps(state) {\n  return {\n    recipes: state.recipes,\n    selected: getSelectedToEdit(state)\n  };\n}\n\nexport default connect(mapStateToProps, { editRecipe, selectRecipe })(RecipeList);\n","import  React  from 'react';\nimport { connect } from 'react-redux';\nimport _ from  'lodash';\nimport RecipeTopLevel from './RecipeTopLevel.js';\nimport RecipeIngredientsTable from './RecipeIngredientsTable';\nimport SubmitRecipe from './SubmitRecipe';\nimport { toggleTitle, toggleServings, updateTitle, updateServings, toggleTable, updateTable, resetEdit, addIngredient } from '../redux/actions';\nimport { getEdited } from '../redux/selectors';\nimport { editRecipeTitlePH } from '../constants/placeholders';\nimport { inputParsers } from '../utilities/parsers';\nclass EditRecipe extends React.Component {\n\n  handleGetIngredients = ( ingredients ) =>\n    ingredients ?\n    ingredients  :\n    {};\n\n  handleGetServings = ( servings ) =>\n    servings ?\n    servings : 0;\n\n  handleGetTitle = ( title ) =>\n    title || title === '' ?\n    title :\n    editRecipeTitlePH;\n  \n  handleTitleClick = (e) =>\n    e.target.innerHTML !== editRecipeTitlePH ?\n    this.props.toggleTitle(e.target.innerHTML) :\n    null;\n\n  handleUpdateTitle = ( title ) => {\n    this.props.updateTitle( title );\n  }\n \n  handleTitleEnterKey = (e) => {\n    const keyCode = e.keyCode || e.which;\n    if (keyCode === 13) {\n      this.props.toggleTitle();\n    }}\n\n    handleTitleBlur = () =>\n    this.props.edited.editableTitle ?\n    this.props.toggleTitle() : null;\n\n  \n  handleServingsEnterKey = (e) => {\n    const keyCode = e.keyCode || e.which;\n    if (keyCode === 13) {\n      this.props.toggleServings();\n    }}\n\n  \n  handleServingsClick = ( servings ) =>\n    servings !== 0 ?\n    this.props.toggleServings() :\n    null;\n\n  handleUpdateServings =  servings  =>\n    this.props.updateServings( inputParsers.integer(servings) );\n\n  handleServingsBlur = () =>\n    this.props.edited.editableServings ?\n    this.props.toggleServings() : null;\n\n  handleTableClick  = (event) => {\n    const ingredients = this.props.edited.ingredients;\n    const target = event.target;\n    const className = target.className;\n    let idx = parseInt(target.id);\n    this.props.toggleTable( idx, className );\n\t}\n\n    handleTableEnterKey = (event) => {\n    const  ingredients = this.props.edited.ingredients;\n    const target = event.target;\n    let idx = parseInt(target.id);\n    const keyCode = event.keyCode || event.which;\n      if (keyCode === 13) {\n        this.props.toggleTable( idx, null );\n    }\n  }\n\n    handleTableBlur = (event) => {\n    const  ingredients = this.props.edited.ingredients;\n    const target = event.target;\n    let idx = parseInt(target.id);\n      this.props.toggleTable( idx, null );\n    }\n\n    handleTableChange = (event) => {\n    const target = event.target;\n    const value = target.value;\n    const idx = parseInt(target.id);\n    const ingredients = this.props.edited.ingredients;\n    const className = target.className;    \n\t\t  switch (className) {\n        case 'qty':\n          this.props.updateTable(idx, className, inputParsers.float(value));\n\t\t\t\t  break;\n\t\t\t  default:\n          this.props.updateTable(idx, className, value);\n\t\t  }\n    }\n  ;\n\n  handleAddIngredient = () =>\n    this.props.addIngredient();\n  \n  handleResetEdit = () =>\n    this.props.resetEdit();\n\n  \n\trender(props) {\n\n\t\treturn (\n        <div className='edit-recipe'>\n          <RecipeTopLevel\n            topBar={'Edit recipe'}\n            title={this.handleGetTitle(this.props.edited.title)}\n            editableTitle={this.props.edited.editableTitle}\n            editableServings={this.props.edited.editableServings}\n            servings={this.handleGetServings(this.props.edited.servings)}\n            onTitleClick={this.handleTitleClick}\n            onTitleEnterKey={this.handleTitleEnterKey}\n            onTitleBlur={this.handleTitleBlur}\n            onUpdateTitle={this.handleUpdateTitle}\n            onServingsClick={() => this.handleServingsClick(this.props.edited.servings)}\n            onUpdateServings={this.handleUpdateServings}\n            onServingsEnterKey={this.handleServingsEnterKey}\n            onServingsBlur={this.handleServingsBlur}\n          />\n          <EditRecipeIngredientsTable\n            key={'ingredients-' + this.props.edited.title}\n            ingredients={this.handleGetIngredients(this.props.edited.ingredients)}\n            onTableClick={this.handleTableClick}\n            onTableEnterKey={this.handleTableEnterKey}\n            onTableBlur={this.handleTableBlur}\n            onTableChange={this.handleTableChange}\n            onAddIngredient={this.handleAddIngredient}\n      /* {this.handleGetIngredients} */\n          />\n          <SubmitRecipe\n            title={this.props.edited.title}\n            servings={this.props.edited.servings}\n            ingredients={this.props.edited.ingredients}\n            onSubmitReset={this.handleResetEdit}\n          />\n          <button\n            className='button'\n            onClick= {this.handleResetEdit}\n          >Cancel</button>\n        </div>\n      \n    );\n  }\n}\n\nclass EditRecipeIngredientsTable extends React.Component {\n\n\trender(props) {\n    return(\n      <div>\n        <RecipeIngredientsTable\n          onAddIngredient={this.props.onAddIngredient}\n          ingredients={this.props.ingredients}\n          onTableChange={this.props.onTableChange}\n          onTableClick={this.props.onTableClick}\n          onTableEnterKey={this.props.onTableEnterKey}\n          onTableBlur={this.props.onTableBlur}\n        />\n      </div>\n\t  );\n  }\n}\n\n//REACT-REDUX\n\nconst mapStateToProps = state => {\n  // const { selectedRecipe, recipes } = state;\n  const edited = getEdited(state);\n  // const ingredients = {1:{name: 'foo', unit: 'kg', qty: 99}};\n  return {\n    edited\n  };\n};\n\nexport default connect(mapStateToProps, { toggleTitle, toggleServings, updateTitle, updateServings, toggleTable, updateTable, resetEdit, addIngredient })(EditRecipe);\n\n\n\n","import React from 'react';\n\nclass Select extends React.Component{\n  static displayName = \"Select\"\n\n\tconstructor(){\n\t\tsuper();\n\t\tthis.selectedElement = React.createRef();\n\t}\n\t\n  render(){\n    const { children, open } = this.props;\n    return React.cloneElement(children, {ref: this.selectedElement, onClick: open});\n  }\n}\n\nexport default Select;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n\nclass Controller extends React.Component{\n  constructor(props) {\n    super(props);\n  \n    this.state = {\n      isOpen: false,\n      style: {\n        position: \"absolute\",\n        top: 0,\n        left: 0\n      }\n    };\n  }\n  \n  open = () => {\n    this.setState({isOpen: true});\n  }\n  \n  close = () => {\n    this.setState({isOpen: false});\n  }\n\n  getPos = (left, top, height) => {\n    this.setState(prevState => (\n      {style: {...prevState.style, left, top: top + height}}));\n  }\n  \n  render(){\n    const { children } = this.props;\n    const { isOpen, style } = this.state;\n\n    const inputChildren = React.Children.map(children, child => {\n      if(child.type.displayName === \"Select\"){\n        return React.cloneElement(child, {open: this.open});\n      }\n      else{\n        return isOpen && ReactDOM.createPortal(\n          <span style={style}>React.cloneElement(child)</span>, document.body);\n      }\n    });\n\n    return inputChildren;\n  }\n}\n\nexport default Controller;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\n\nexport default class Tooltip extends React.Component {\n  static propTypes = {\n    children: PropTypes.any.isRequired,\n    content: PropTypes.oneOfType([\n      PropTypes.string,\n      PropTypes.array,\n    ]),\n    styles: PropTypes.object\n  }\n\n  styles = {\n    wrapper: {\n      position: 'relative',\n      display: 'inline-block',\n      zIndex: '98',\n      color: '#555',\n      cursor: 'help'\n    },\n    tooltip: {\n      position: 'absolute',\n      zIndex: '99',\n      minWidth: '200px',\n      maxWidth: '420px',\n      background: '#000',\n      bottom: '100%',\n      left: '50%',\n      marginBottom: '10px',\n      padding: '5px',\n      WebkitTransform: 'translateX(-50%)',\n      msTransform: 'translateX(-50%)',\n      OTransform: 'translateX(-50%)',\n      transform: 'translateX(-50%)'\n    },\n    content: {\n      background: '#000',\n      color: '#fff',\n      display: 'inline',\n      fontSize: '.8em',\n      padding: '.3em 1em'\n    },\n    arrow: {\n      position: 'absolute',\n      width: '0',\n      height: '0',\n      bottom: '-5px',\n      left: '50%',\n      marginLeft: '-5px',\n      borderLeft: 'solid transparent 5px',\n      borderRight: 'solid transparent 5px',\n      borderTop: 'solid #000 5px'\n    },\n    gap: {\n      position: 'absolute',\n      width: '100%',\n      height: '20px',\n      bottom: '-20px'\n    },\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      visible: false\n    };\n    if (props.styles) this.mergeStyles(props.styles);\n  }\n\n  mergeStyles = (userStyles) => {\n    Object.keys(this.styles).forEach((name) => {\n      Object.assign(this.styles[name], userStyles[name]);\n    });\n  }\n\n  show = () => this.setVisibility(true);\n\n  hide = () => this.setVisibility(false);\n\n  setVisibility = (visible) => {\n    this.setState(Object.assign({}, this.state, {\n      visible\n    }));\n  }\n\n  handleTouch = () => {\n    this.show();\n    this.assignOutsideTouchHandler();\n  }\n\n  assignOutsideTouchHandler = () => {\n    const handler = (e) => {\n      let currentNode = e.target;\n      const componentNode = ReactDOM.findDOMNode(this.refs.instance);\n      while (currentNode.parentNode) {\n        if (currentNode === componentNode) return;\n        currentNode = currentNode.parentNode;\n      }\n      if (currentNode !== document) return;\n      this.hide();\n      document.removeEventListener('touchstart', handler);\n    };\n    document.addEventListener('touchstart', handler);\n  }\n\n  render() {\n    const {props, state, styles, show, hide, handleTouch} = this;\n    return (\n      <div\n        onMouseEnter={show}\n        onMouseLeave={hide}\n        onTouchStart={handleTouch}\n        ref=\"wrapper\"\n        style={styles.wrapper}>\n        {props.children}\n        {\n          state.visible &&\n          <div ref=\"tooltip\" style={styles.tooltip}>\n            <div ref=\"content\" style={styles.content}>{props.content}</div>\n            <div ref=\"arrow\" style={styles.arrow} />  \n            <div ref=\"gap\" style={styles.gap} />\n          </div>\n        }\n      </div>\n    );\n  }\n}\n","import React from 'react';\nimport { getProducts } from '../redux/selectors';\nimport { connect } from 'react-redux';\nimport { addFormat, removeProduct, updateProductTitle } from '../redux/actions';\nimport { unitSet } from '../constants/shared';\nimport './Product.css';\n\nclass Product extends React.Component {\n\n  constructor(props) {\n    super(props);\n    this.defaultState = {\n      productTitle: this.props.product,\n      qty: 0,\n      unit: 'kg',\n      editable: false,\n      editableProductTitle: false};\n\n    this.state = this.defaultState;\n  }\n\n  handleToggleEdit = (key) => {\n    this.setState({[key]: !this.state.editable});\n  }\n\n  handleUpdateInput = ( key, e ) => {\n    const value = e.target.value;\n    this.setState({[key]: value});\n  }\n\n  handleOnEnter = (e) => {\n    const product = this.props.product;\n    const keyCode = e.keyCode || e.which;\n    if (keyCode === 13) {\n      //check that productTitle changed since `updateProductTitle` deletes the original product.\n      if (product !== this.state.productTitle) {\n        this.props.updateProductTitle( product, this.state.productTitle );}\n      this.setState({editableProductTitle: !this.state.editableProductTitle});\n    }\n  }\n\n  \n  handleSubmit = () => {\n    const product = this.props.product;\n    const qty = this.state.qty;\n    const unit = this.state.unit;\n    this.props.addFormat(product, qty, unit);\n    this.setState({editable: !this.state.editable});\n  };\n\n  handleRemoveProduct = () => {\n    const conf = window.confirm('this will remove the product from the inventory. go a head?');\n    return (conf ?\n      this.props.removeProduct(this.props.product) :\n      null);\n  }\n  \n  render() {\n    const product = this.props.product;\n    const fmts = this.props.fmts;\n\t\treturn (\n      <div>\n        <p className='remove-button'\n              onClick= {this.handleRemoveProduct}\n        >X</p>\n        {!this.state.editableProductTitle ?\n        <h2 onClick={() => this.handleToggleEdit('editableProductTitle')} //the key to be toggled\n        >{product}</h2>\n          : <input\n              value={this.state.productTitle}\n              onChange={e => this.handleUpdateInput('productTitle', e)}\n              onKeyDown={(e) => this.handleOnEnter(e)}\n            autoFocus></input>}\n        <p>Available formats:</p>\n        {fmts.map(fmt =>\n          <div className='format-div'>\n            <li>{fmt.qty + ' ' + fmt.unit}</li>\n            <p>x</p>\n          </div>)}\n      {!this.state.editable ?\n        <h3 onClick={() => this.handleToggleEdit('editable')}//the key to be toggled\n        >Add Format</h3>\n        :\n        <div>\n        <input type='number' min={1} \n               className='qty'\n               value={this.state.qty}\n               onChange={e => this.handleUpdateInput('qty', e)}\n               ></input>\n          <select\n            value={this.state.unit}\n            onChange={e => this.handleUpdateInput('unit', e)}>\n          {unitSet.map((u) => (<option key={'unit-list-item-' + u} >{u}</option>))}\n          </select>\n          <button\n            className='button'\n            onClick = {this.handleSubmit}\n          >submit</button>\n        </div>}\n      </div>\n\n\t\t);\n\t}\n}\n\nconst mapStateToProps = state => {\n  const products = getProducts(state);\nreturn {\n  products};\n};\n\nexport default connect(mapStateToProps, { addFormat, removeProduct, updateProductTitle })(Product);\n","import React from 'react';\nimport { connect } from 'react-redux';\nimport { addProduct } from '../redux/actions';\nimport { unitSet } from '../constants/shared';\nimport './AddProduct.css';\nclass AddProduct extends React.Component {\n\n\tconstructor(props){\n\t\tsuper(props);\n\t\tthis.defaultState = {\n      editable: false,\n      editableTitle: true,\n\t\t\ttitle: '',\n\t\t\tqty: 0,\n      unit: 'kg'\n\t\t};\n    this.state = this.defaultState;\n\t}\n\n  handleEdit = () => {\n    this.setState({editable: !this.state.editable});\n  }\n\n  handleUpdate = (key, e) => {\n    const value = e.target.value;\n    this.setState({[key]: value});\n\n  }\n\n  handleToggle = () => {\n    this.setState({editableTitle: !this.editableTitle});\n  }\n\n  handleTitleEnterKey = (e) => {\n    const keyCode = e.keyCode || e.which;\n    if (keyCode === 13) {\n      this.setState({editableTitle: !this.state.editableTitle});\n    }}\n\n  handleSubmit = () => {\n    this.props.addProduct(this.state.title, [{qty: this.state.qty, unit: this.state.unit}]);\n    this.setState(this.defaultState);\n  }\n  \n\trender(){\n  return(<div>\n           {!this.state.editable ?\n             <h2 onClick={this.handleEdit}\n             >add a product</h2> :\n             <div className='add-product-box'>\n               <h2>adding a product</h2>\n               {this.state.editableTitle ?\n                 <div>\n                 <label>product name</label>\n                   <input\n                     value={this.state.title}\n                     onChange={(e) => this.handleUpdate('title', e)}\n                     onKeyDown={(e) =>this.handleTitleEnterKey(e)}\n                 ></input>\n                 </div>\n                 :\n                 <div><h2 onClick={this.handleToggle}>{this.state.title}</h2></div>}\n               <div>\n                 <label>format:</label>\n                 <input type='number'\n                        min={0}\n                        onChange={(e) => this.handleUpdate('qty', e)}></input>\n                 <select\n                   onChange={(e) => this.handleUpdate('unit' ,e)}\n                 >{unitSet.map(unit => <option>{unit}</option> )}</select>\n               </div>\n               <button\n                 className='button'\n                 onClick={this.handleSubmit}\n               >Submit</button>\n             </div>}\n         </div>);\n\t};\n}\n\nexport default connect(null, { addProduct })(AddProduct);\n\n","import React from 'react';\nimport { getProducts } from '../redux/selectors';\nimport { connect } from 'react-redux';\nimport Controller from './Controller';\nimport Select from './Select';\nimport Tooltip from './Tooltip';\nimport Product from './Product';\nimport AddProduct from './AddProduct';\nimport './IngredientsDB.css';\nimport _ from 'lodash';\n\nclass IngredientsDB extends React.Component {\n\n  constructor(props) {\n    super(props);\n    const products = _.keys(this.props.products);\n    this.initialState = _.zipObject(products, products.map(p => false));\n    this.state = this.initialState;\n  }\n    \n      \n  handleHover = ( product ) => {\n    this.setState({\n      [product]: !this.state[product]\n    });\n  };\n\n \n  render() {\n    const products = this.props.products;\n    const whiteRoundedStyle = {\n      wrapper: {\n        flexAlign: 'row',\n        display: 'inline-block',\n        cursor: 'pointer'\n      },\n      content: {\n        backgroundColor: 'white',\n        color: '#000',\n        fontSize: '1.2rem',\n        lineHeight: '150%'\n      },\n      tooltip: {\n        backgroundColor: 'white',\n        borderRadius: '10px',\n        bottom: '40%',\n        left: '100%',\n        opacity: '0.7'\n      },\n      arrow: {\n        borderLeft: 'solid white 5px'\n      }\n    };\n\n    return (\n      <div className='ingredients-head'>\n        <h2 className='ingredients-list-title'>Stored Ingredients:</h2>\n        <AddProduct />\n        {_.keys(products).map(\n          product =>\n            <Tooltip\n              content={<div>\n\n                         <Product\n                           product={product}\n                           fmts={products[product]}/>\n                       </div>}\n              styles={whiteRoundedStyle}\n            >  <p className='product'\n                  id={product}\n                  /* title={'Available formats: ' + products[product].map(fmt => fmt.qty + ' ' + fmt.unit + '. ')} */\n               >{product}</p>\n            </Tooltip>\n          \n          \n          \n) \n\n}\n        \n      </div>\n    );\n  }\n}\n\n\n      \nconst mapStateToProps = state => {\n  const products = getProducts(state);\n  return {\n    products\n  };\n};\n\nexport default connect(mapStateToProps)(IngredientsDB);\n","import React from 'react';\nimport './Cell.css';\nimport { getRecipesState } from '../redux/selectors';\nimport { addCell, removeCell, toggleField, updateCell } from '../redux/actions';\nimport { getWeek } from '../redux/selectors';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\nclass Cell extends React.Component {\n \n  //helper to capitalize the name property where necessary\n  titleCase(string) {\n    return string.charAt(0).toUpperCase() + string.slice(1);\n}\n  \n  // handleAddMeal = () => {\n  //   this.setState({editable: !this.state.editable});\n  // }\n\n  handleRemoveMeal = ( id ) => {\n    this.props.removeCell( id );\n  }\n\n  handleToggleEdit = (cellID, field) =>\n    this.props.toggleField(cellID, field);\n\n  handleUpdateInput = ( e, cellID ) => {\n    const value = e.target.value;\n    const field = e.target.name;\n    this.props.updateCell(cellID, field, value);\n  }\n  \n  handleEnterKey = (e, cellID) => {\n    const keyCode = e.keyCode || e.which;\n    const field = 'editable' + this.titleCase(e.target.name);\n    if (keyCode === 13) {\n      this.props.toggleField(cellID, field);\n    }\n  }\n\n  handleBlur = (e, cellID) => {\n    const field = 'editable' + this.titleCase(e.target.name);\n    this.props.toggleField(cellID, field);\n  }\n\n  render () {\n    const cellID = this.props.cellID;\n    \n\t\treturn(\n      <div className='cell'>\n        {this.props.week[cellID] && this.props.week[cellID].editable === true\n          ? \n          <div>\n            <span\n              className='cross'\n              onClick={() => this.handleRemoveMeal(cellID)}\n            >x</span>\n            {this.props.week[cellID].editableDish === false ?\n              <h2\n                onClick={() => this.handleToggleEdit(cellID, 'editableDish')}\n                 >\n                {'Dish: ' + this.props.week[cellID].dish}</h2> :\n              <div><input\n                     type='text'\n                     name='dish'\n                     onKeyDown={(e) => this.handleEnterKey(e, cellID)}\n                     onChange={e => this.handleUpdateInput(e, cellID)}\n                     onBlur={(e) => this.handleBlur(e, cellID)}\n                     list='dishes'\n                     value={this.props.week.dish}\n                   autoFocus/>\n                 <datalist id='dishes'>\n                   {_.keys(this.props.recipes).map(recipe => (\n                     <option value={recipe} />))}\n                </datalist>\n              </div>\n              }\n          {this.props.week[cellID].editableServings === false ?\n            <h2\n              onClick={() => this.handleToggleEdit(cellID, 'editableServings')}\n            >{'Servings:' + this.props.week[cellID].servings}</h2>\n            :\n            <input\n              name='servings'\n              type='number'\n              value={this.props.week[cellID].servings}\n              min='1'\n              step='1'\n              onKeyDown={(e) => this.handleEnterKey(e, cellID)}\n              onChange={e => this.handleUpdateInput(e, cellID)}\n              onFocus={e => e.target.select()}\n              onBlur={(e) => this.handleBlur(e, cellID)}\n              autoFocus\n            ></input>}\n          </div>\n          :\n          <p\n            className='plus'\n            onClick=\n              {() => this.props.addCell( cellID ) }\n              /* {this.handleAddMeal} */\n          >+</p>\n        }\n      </div>\n    );\n  }\n}\n\t\nconst mapStateToProps = state => {\n  const recipes = getRecipesState(state);\n  const week = getWeek(state);\n  return {\n    recipes,\n    week\n  };\n  \n};\n\n\nexport default connect(mapStateToProps, { addCell, removeCell, toggleField, updateCell })(Cell);\n","import React from 'react';\nimport Cell from './Cell';\nimport { getWeek } from '../redux/selectors';\nimport { connect } from 'react-redux';\nimport _ from 'lodash';\n\nconst EmptyCell = () =>\n      (<div >\n       </div>);\n\nclass WeeklyView extends React.Component {\n\n  // FIX -> find a way to look for day value as a predicate to return  all the day's entries or empty..\n  mealsByDay = ( weekday ) => {\n    \n    const entries= _.keys(this.props.week).filter( entry => (entry.startsWith(weekday)));\n    return entries;\n      \n  }\n  \nrender(){\n  const weekdays = ['Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday', 'Sunday'];\n  const longestColumn = _.max(weekdays.map(weekday => this.mealsByDay(weekday).length));\n\t\treturn(\n      <div>\n        <table>\n          <thead>\n            <tr className='top-bar'>{weekdays.map(day => \n              (<td className='weekly-view-header'><h2 >{day}</h2></td>))}\n            </tr>\n          </thead>\n          <tbody>\n            {/* first row */}\n            <tr className='weekly-view-cell'>\n                {weekdays.map(cell =>\n                  <td>\n                   <Cell\n                     cellID={cell + '-1'} \n                     key={cell + '-1'}\n                   />\n                  </td>)\n                }</tr>\n            {/* consecutive rows */}\n            {_.range(2, _.max([2, longestColumn + 2]) + 1).map(row =>\n              <tr className='weekly-view-cell'>\n                {weekdays.map(weekday =>\n                  this.mealsByDay(weekday)\n                  && this.mealsByDay(weekday).length + 1 >= row\n                  ?\n                  <td>\n                   <Cell\n                     cellID={weekday + '-' + row} \n                     key={weekday + '-' + row}\n                   />\n                     </td>\n                : \n                     <td>\n                  <EmptyCell />\n                        </td>\n                )}\n              </tr>)}\n            \n          </tbody>\n        </table>\n\t\t\t</div>\n    );\n\t}\n}\n\nconst mapToProps = ( state ) => {\n  return {\n    week: getWeek(state)\n  };\n}; \n\nexport default connect(mapToProps)(WeeklyView);\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport NewRecipe from './components/NewRecipe';\nimport RecipeList from './components/RecipeList';\nimport EditRecipe from './components/EditRecipe';\nimport IngredientsDB from './components/IngredientsDB';\nimport WeeklyView from './components/WeeklyView';\nfunction ColorBtn() {\n  return (\n    <button>cook</button>\n  );\n\n} ;\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <header className=\"App-header\">\n        <img src={logo} className=\"App-logo\" alt=\"logo\" />\n        <ColorBtn />\n        <h2 className='App-title'>Weekly shopping</h2>\n      </header>\n      \n      <div className='controls'>\n        <div>\n        <div className='recipes-panel'>\n          <NewRecipe />\n          <RecipeList />\n          <EditRecipe />\n        </div>\n       \n     \n      <div className='ingredientsDB'>\n        <WeeklyView />\n      </div>\n        </div>\n       <IngredientsDB />\n      </div>\n    </div>\n    \n  );\n}\n\nexport default App;\n","import _ from 'lodash';\nimport { ADD_RECIPE } from \"../actionTypes\";\n\nconst initialState = {\n\t\n\t'rice pudding': {\n\t\ttitle: 'rice pudding',\n\t\tservings: 2,\n\t\teditableTitle: false,\n\t\teditableServings: false,\n\t\tingredients: {\n\t\t\t1: {\n\t\t\t\tname: 'rice',\n\t\t\t\tqty: 50,\n\t\t\t\tunit: 'gr',\n\t\t\t\teditable: null},\n\t\t\t2: {\n\t\t\t\tname: 'unsalted butter',\n\t\t\t\tqty: 25,\n\t\t\t\tunit: 'gr',\n\t\t\t\teditable: null},\n\t\t\t3: {\n\t\t\t\tname: 'whole milk',\n\t\t\t\tqty: 500,\n\t\t\t\tunit: 'ml',\n\t\t\t\teditable: null},\n\t\t\t4: {\n\t\t\t\tname: 'caster sugar',\n\t\t\t\tqty: 25,\n\t\t\t\tunit: 'gr',\n\t\t\t\teditable: null}\n\t\t\t\n\t\t}\n\t},\n\t'mash potatoes': {\n\t\ttitle: 'mash potatoes',\n\t\teditableTitle: false,\n\t\teditableServings: false,\n\t\tservings: 5,\n\t\tingredients: {\n\t\t\t1: {\n\t\t\t\tname: 'potatoes',\n\t\t\t\tqty: 1,\n\t\t\t\tunit: 'kg',\n\t\t\t\teditable: null},\n\t\t\t2: {\n\t\t\t\tname: 'whole milk',\n\t\t\t\tqty: 250,\n\t\t\t\tunit: 'ml',\n\t\t\t\teditable: null},\n\t\t\t3: {\n\t\t\t\tname: 'butter',\n\t\t\t\tqty: 50,\n\t\t\t\tunit: 'gr',\n\t\t\t\teditable: null},\n\t\t\t4: {\n\t\t\t\tname: 'salt',\n\t\t\t\tqty: 2,\n\t\t\t\tunit: 'gr',\n\t\t\t\teditable: null}}\n\t}\n}; \n\nexport default function(state = initialState, action) {\n\tswitch (action.type) {\n    case ADD_RECIPE: {\n\t\t\tconst { recipe , content } = action.payload;\n      return {\n        ...state,\n\t\t\t\t...state.recipes,\n\t\t\t\t[recipe]: content\n      };\n    }\n\t\t\n\t\tdefault: return state;}\n}\n","import { SELECT_RECIPE } from '../actionTypes';\n\nconst initialState = {\n\tselectedRecipe: {}\n};\n\nexport default function(state = initialState, action) {\n\tswitch (action.type) {\n      case SELECT_RECIPE: {\n\t\tconst { recipe } = action.payload;\n      return {\n        ...state,\n\t\t\t\tselectedRecipe:{\n\t\t\t\trecipe\n\t\t\t\t}\n\t\t\t};\n\t\t\t}\n\t\tdefault: return state;}\n}\n","import _ from 'lodash';\nimport { EDIT_RECIPE, TOGGLE_TITLE, TOGGLE_SERVINGS, UPDATE_TITLE, UPDATE_SERVINGS, TOGGLE_TABLE, UPDATE_TABLE, RESET_EDIT, ADD_INGREDIENT } from '../actionTypes';\n\nconst initialState = {\n\trecipe: {}\n};\n\nexport default function(state = initialState, action) {\n\tswitch (action.type) {\n    case EDIT_RECIPE: {\n\t\t\tconst { recipe } = action.payload;\n      return {\n\t\t\t\trecipe\n\t\t\t};\n\t\t}\n\t\t\t\n\t\tcase TOGGLE_TITLE: {\n\t\t\tconst { } = action.payload;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\trecipe: {...state.recipe,\n\t\t\t\t\teditableTitle: !state.recipe.editableTitle \n\t\t\t\t}\t\n\t\t\t};\n\t\t}\n\n\tcase TOGGLE_SERVINGS: {\n\t\t\tconst { } = action.payload;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\trecipe: {...state.recipe,\n\t\t\t\t\teditableServings: !state.recipe.editableServings \n\t\t\t\t}\t\n\t\t\t};\n\t}\n\n\t\tcase UPDATE_TITLE: {\n\t\t\tconst { title } = action.payload;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\trecipe: {...state.recipe,\n\t\t\t\t\ttitle: title\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tcase UPDATE_SERVINGS: {\n\t\t\tconst { servings } = action.payload;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\trecipe: {...state.recipe,\n\t\t\t\t\tservings: servings\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tcase TOGGLE_TABLE: {\n\t\t\tconst { id, className } = action.payload;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\trecipe: {...state.recipe,\n\t\t\t\t\tingredients: {...state.recipe.ingredients,\n\t\t\t\t\t\t[id]: {...state.recipe.ingredients[id],\n\t\t\t\t\t\t\teditable: className\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tcase UPDATE_TABLE: {\n\t\t\tconst { id, className, value } = action.payload;\n\t\t\treturn {\n\t\t\t\t...state,\n\t\t\t\trecipe: {...state.recipe,\n\t\t\t\t\tingredients: {...state.recipe.ingredients,\n\t\t\t\t\t\t[id]: {...state.recipe.ingredients[id],\n\t\t\t\t\t\t\t[className]: value\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\t\t\n\t\n\t\tcase RESET_EDIT: {\n\t\t\treturn {...state,\n\t\t\t\trecipe: {}\n\t\t\t};\n\t\t}\n\n\t\tcase ADD_INGREDIENT: {\n\t\t\tconst existingIngredients = _.keys(state.recipe.ingredients).length;\n\t\t\treturn {...state,\n\t\t\t\trecipe: {...state.recipe,\n\t\t\t\t\tingredients: {...state.recipe.ingredients,\n\t\t\t\t\t\t[existingIngredients + 1]: {name: 'new ingredient', qty: 1, unit: 'kg'}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\t\tdefault: return state;}\n\n}\n","import { ADD_PRODUCT, REMOVE_PRODUCT, UPDATE_PRODUCT_TITLE, ADD_FORMAT, REMOVE_FORMAT } from '../actionTypes.js';\n\nconst initialState = {\n\t\n\t\t'salt': [{qty: 1, unit: 'kg'}, {qty: 500, unit: 'gr'}],\n\t\t'rice': [{qty: 1, unit: 'kg'}],\n\t\t'unsalted butter': [{qty: 250, unit: 'gr'}],\n\t\t'salted butter': [{qty: 250, 'unit': 'gr'}],\n\t\t'whole milk': [{qty: 1, unit: 'litre'}],\n\t\t'semiskimmed milk': [{qty: 1, unit: 'litre'}],\n\t\t'caster sugar': [{qty: 1, unit: 'kg'}],\n\t\t'potatoes': [{qty: 2, unit: 'kg'}, {qty: 3, unit: 'kg'}, {qty: 5, unit: 'kg'}]};\n\nexport default function(state = initialState, action) {\n\tswitch (action.type) {\n\t\tcase ADD_PRODUCT: {\n\t\t\tconst { product, formats } = action.payload;\n\t\t\treturn {...state, \n\t\t\t\t[product]: formats };\n\t\t}\n\t\t\t\n\t\tcase REMOVE_PRODUCT: {\n\t\t\tconst { product } = action.payload;\n\t\t\tconst newState = Object.assign({}, state);\n\t\t\tdelete newState[product];\n\t\t\treturn newState;\n\t\t}\n\t\t\t\n\t\tcase UPDATE_PRODUCT_TITLE: {\n\t\t\tconst { product, newTitle } = action.payload;\n\t\t\tstate[newTitle] = state[product];\n\t\t\tdelete state[product];\n\t\t\treturn {...state\n\t\t\t\t\n\t\t\t\t };\n\t\t}\n\n\t\tcase ADD_FORMAT: {\n\t\t\tconst { product, qty, unit } = action.payload;\n\t\t\treturn{ ...state,\n\t\t\t\t[product]: [...state[product],\n\t\t\t\t\t{qty: qty, unit: unit}\n\t\t\t\t]};\n\t\t}\n\n\t\tcase REMOVE_FORMAT: {\n\t\t\tconst { product, id } = action.playload;\n\t\t\tconst newState = Object.assign({}, state);\n\t\t\tdelete newState[product][id];\n\t\t\treturn {...newState};\n\t\t}\n\n\t\tdefault: return state;\n\t}\n}\n\n","import _ from 'lodash';\nimport { ADD_CELL, REMOVE_CELL, TOGGLE_FIELD, UPDATE_CELL } from '../actionTypes';\n\nconst initialState = {\n\t \n};\n\nfunction renameKey (key) {\n\tconst splitKey = key.split('-');\n\treturn splitKey[0] + '-' + (splitKey[1]- 1);\n}\n\nexport default function(state = initialState, action) {\n\tswitch (action.type) {\n    case ADD_CELL: {\n\t\t\tconst { cellID } = action.payload;\n      return {...state,\n\t\t\t\t[cellID]: {\n\t\t\t\t\teditable: true,\n\t\t\t\t\teditableDish: false,\n\t\t\t\t\tdish: '',\n\t\t\t\t\teditableServings: false,\n\t\t\t\t\tservings: 1\n\t\t\t\t} \n\t\t\t};\n\t\t}\n\t\t\t\n\t\tcase REMOVE_CELL: {\n\t\t\tconst { cellID } = action.payload;\n\t\t\tconst weekday = cellID.split('-')[0];\n\t\t\tconst column = _.keys(state).filter(key => key.split('-')[0] === weekday);\n\t\t\tconst biggerThanRemoved = column.filter(key => parseInt(key.split('-')[1]) > parseInt(cellID.split('-')[1]));\n\t\t\tconst newState = Object.assign({}, state);\n\t\t\tdelete newState[cellID];\n\t\t\t_.keys(newState).map(key => {\n\t\t\t\tif (biggerThanRemoved.includes(key))  {\n\t\t\t\t\tnewState[renameKey(key)] = newState[key];\n\t\t\t\t\tdelete newState[key];}});\n\t\t \n\t\t\treturn {...newState\n\t\t\t};\n\t\t\t\n\t\t}\n\n\t\tcase TOGGLE_FIELD: {\n\t\t\tconst { cellID, field } = action.payload;\n\t\t\treturn {...state,\n\t\t\t\t[cellID]: {...state[cellID],\n\t\t\t\t\t[field]: !state[cellID][field]\n\t\t\t\t}\n\t\t\t};\n\t\t}\n\n\t\tcase UPDATE_CELL: {\n\t\t\tconst { cellID, field, value } = action.payload;\n\t\t\treturn {...state,\n\t\t\t\t[cellID]:{...state[cellID],\n\t\t\t\t\t[field]: value}\n\t\t\t};\n\t\t}\n\n\t\tdefault: return state;}\n\t\n}\n\t\n\n\t\n","import { combineReducers } from \"redux\";\nimport recipes from './recipes';\nimport selections from './selections';\nimport editedRecipe from './edited';\nimport pantry from './pantry';\nimport week from './week';\nexport default combineReducers({ recipes, selections, editedRecipe, pantry, week });\n","import { createStore } from \"redux\";\nimport { persistStore, persistReducer } from 'redux-persist';\nimport storage from 'redux-persist/lib/storage';\nimport autoMergeLevel2 from 'redux-persist/lib/stateReconciler/autoMergeLevel2';\nimport rootReducer from \"./reducers\";\n\n\nconst persistConfig = {\n key: 'root',\n storage: storage,\n\tstateReconciler: autoMergeLevel2 // see \"Merge Process\" section for details.\n\t,  blacklist: ['week', 'pantry'] // -> look in doc.org\n};\n\nconst pReducer = persistReducer(persistConfig, rootReducer);\n\nexport const store = createStore(\n\tpReducer,\n\twindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\nexport const persistor = persistStore(store);\n\n\n\n//ORIGIAL STORE SETUP\n// export default createStore(rootReducer,\n// \twindow.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n// );\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport { Provider } from 'react-redux';\n// import store from './redux/store';\nimport { PersistGate } from 'redux-persist/integration/react';\nimport { persistor, store } from './redux/store';\nReactDOM.render(\n\t\t<Provider store={store}>\n\t\t<PersistGate loading={null} persistor={persistor}>\n\t<App />\n  </PersistGate>\n\t</Provider>, document.getElementById('root'));\n\n\n\n\n\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\n"],"sourceRoot":""}